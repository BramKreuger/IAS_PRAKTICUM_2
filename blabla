extensions [table]
globals [
  colorlist index stratcolor stratlist ; all lists
  payoff stratsum totalscore scoretable]
patches-own [score play]

to setup
  clear-output
  clear-all-plots
  clear-patches
  stratset
  patchset
  reset-ticks
end

to go
  stratpopulation
  tick
end

to stratpopulation
  
end

to set-equal ; snelle gelijkmaker voor tijdens programmeren - NIET IN EINDPRODUCT
  set always-cooperate precision (100 / length stratlist) 2
    set always-defect precision(100 / length stratlist) 2
    set play-randomly precision (100 / length stratlist) 2
    set unforgiving precision(100 / length stratlist) 2
    set tit-for-tat precision (100 / length stratlist) 2
    set Pavlov precision (100 / length stratlist) 2
end

to patchset  ; the pre-set population settings for the patches
  ; foreach stratlist [ [p] -> replace-item p stratlist (p / sum stratlist)]
  if not (abs(stratsum - 100) <= .001)  [
    set always-cooperate precision (always-cooperate / stratsum * 100) 2
    set always-defect precision(always-defect / stratsum * 100) 2
    set play-randomly precision (play-randomly / stratsum * 100) 2
    set unforgiving precision(unforgiving / stratsum * 100) 2
    set tit-for-tat precision (tit-for-tat / stratsum * 100) 2
    set Pavlov precision (Pavlov / stratsum * 100) 2
  ]
  
  set stratsum sum stratlist
  foreach index [ [p] -> ask n-of (count patches * (item p stratlist / sum stratlist)) patches with [pcolor = black] [
     set pcolor item p colorlist] ]
  
end

to stratset
  set stratcolor (list ; list + round brackets so that non-literal values (variables) are accepted within lists.
    (list always-cooperate green) ; with this, the foreach-statement in patchset was made possible.
    (list always-defect red)
    (list play-randomly gray)
    (list unforgiving 102)
    (list tit-for-tat violet)
    (list Pavlov magenta))
  set stratlist map [ [x] ->  item 0 x] stratcolor
  set colorlist map [ [x] -> item 1 x] stratcolor
  set index n-values length stratlist [ [x] -> x ]
  set stratsum sum stratlist
  set payoff (list (list CC-payoff-reward CD-payoff-sucker)(list DC-payoff-temptation DD-payoff-punishment))
end




; voor elke strategie een percentage kiezen (wordt P1)
; volgende aandeel strategie = (Pi * Si)/(Sum(Pi * Si))
; 
